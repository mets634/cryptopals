#!/usr/bin/env python

# fix package problem
import os
os.sys.path.append(os.path.dirname(os.path.abspath('.')))


from challenge2 import hexstr_xor
import string


def singlebyte_xor(hexstr, singlechar):
    charstr = singlechar * len(hexstr.decode('hex'))

    return hexstr_xor(hexstr, charstr.encode('hex'))

def letter_frequency(hexstr):
    # NOTE: ignores all non english characters

    # remove all non english characters
    msg = filter(lambda c: ord(c) >= ord('A') and ord(c) <= ord('z'), 
            hexstr.decode('hex'))

    freq = [msg.count(chr(letter)) * 1.0 / len(msg) # frequency in msg
            for letter in range(ord('A'), ord('z'))]

    return sum(map(lambda x: x * x, freq))

def pair_freq(cipher):
    printable = set(string.printable)

    xors = [singlebyte_xor(cipher, chr(letter))
            for letter in range(ord('A'), ord('z'))]


    return [(msg, letter_frequency(msg)) 
            for msg in xors
            if str(bytearray(msg)).decode('hex') in printable]


def brute_force(cipher):
    pass

cipher = '1b37373331363f78151b7f2b783431333d78397828372d363c78373e783a393b3736'

#print str(bytearray(singlebyte_xor(cipher, 'X'))).decode('hex')

for x in[(str(bytearray(a)).decode('hex'), b) for (a, b) in pair_freq(cipher)]:
    print x
